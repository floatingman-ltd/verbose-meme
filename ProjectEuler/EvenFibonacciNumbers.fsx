// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1,2,3,5,8,13,21,34,55,89,...
// By considering the terms in the Fibonacci sequence whose values do not exceed four
// million, find the sum of the even-valued terms.

//* brute force

let isEven v = v % 2 = 0

let nextFibonacci a b = a + b

let fibonacci =
  (0, 1)
  |> Seq.unfold (fun state -> 
    let current, next = state
    match current with
    | c when c < 0 -> failwith "Overflow has wrapped to zero"
    | c when next >= 4_000_000 -> None
    | _ -> 
      let next' = current + next
      let state' = next, next'
      Some (current, state'))

let bruteForceAnswer = fibonacci |> Seq.filter (isEven) // |> Seq.sum
    // if current < 0 then 
    //   None
    // else
    //   let next' = current + next
    //   let state' = next, next'
    //   Some (current, state'))

// for x in  fibonacci do printf "%d " x
bruteForceAnswer |> Seq.iter (printfn "%A")